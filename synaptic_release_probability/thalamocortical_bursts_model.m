function [specification, popCounter, connCounter] = ...
    thalamocortical_bursts_model(specification, popCounter, connCounter,...
    hyperPVal, hyperPTime, appCurrentVal, appCurrentTime)
% Setting up thalamo-cortical cell model which bursts in response to current injection after hyperpolarization

%% create population equations cell of strings based on number of spikes in TC cell
numTCSpikes  = size(appCurrentVal,1);
de =  'dv/dt=(@current';
for u = 1:numTCSpikes
    de = strcat(de,strcat('+ Iapp',num2str(u),'(t)'));
end
de = strcat(de,')/Cm');
temp = {de};
for v = 1:numTCSpikes
    temp{v+1,1} = strcat('Iapp',num2str(v),'(t)=0*(t<AppCurrentTime(',num2str(v),',1))+AppCurrentVal(',...
        num2str(v),')*(t>=AppCurrentTime(',num2str(v),',1)&&t<=AppCurrentTime(',num2str(v),',2))+0*(t>AppCurrentTime(',num2str(v),',2))');
end 
temp = [temp; {'Cm = 1';...   
    'spike_threshold = -5';...
    'monitor v.spikes(spike_threshold, 1)';...
    'v(0) = -60'}];

%% setting up thaloamo-cortical cell model
popCounter = popCounter + 1;
specification.populations(popCounter).name = 'TC';
specification.populations(popCounter).size = 1;
specification.populations(popCounter).equations = temp;
specification.populations(popCounter).parameters = {'AppCurrentVal',appCurrentVal,'AppCurrentTime',appCurrentTime}; % 'HyperPVal',hyperPVal,'HyperPTime',hyperPTime,
specification.populations(popCounter).mechanism_list = {...    
    'iNa_TC_AS17',...
    'iK_TC_AS17',...
    'iLeak_TC_AS17',...
    'iKLeak_TC_CV19',...
    'CaBuffer_TC_AS17',...
    'iH_TC_CV19',...
    'iT_Ca3_1_ND20',...
    };
end